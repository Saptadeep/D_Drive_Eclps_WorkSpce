 1/1: ipython notebook --pylab=inline
 2/1: import pandas
 2/2: plot(arange(10))
 3/1: import pandas
 3/2: plot(arange(10))
 4/1: import pandas
 4/2: plot(arange(10))
 7/1: print hello
 7/2: print (hello)
 7/3: print ('hello'')
 7/4: print ('hello')
 7/5: print (1)
 7/6: print (1+8)
 7/7: import pandas
 7/8:
import pandas
plot(arange(10))
 7/9:
import pandas
import matplotlib
plot(arange(10))
7/10:
import pandas
import matplotlib.pyplot 
plot(arange(10))
7/11:
import pandas
import matplotlib.pyplot as mp
mp.plot(arange(10))
7/12:
import pandas
import matplotlib.pyplot as mp
mp.plot((10))
7/13:
import pandas
import matplotlib.pyplot as mp
mp.plot((10,10))
7/14:
import pandas
import matplotlib.pyplot as mp
mp.plot([1,2,3])
7/15:
import pandas
import matplotlib.pyplot as mp
mp.plot([1,2,3])
7/16:
import pandas
import matplotlib.pyplot as mp
mp.plot([1,2,3])
7/17:
import pandas
import matplotlib.pyplot as mp
mp.plot([1,2,3])
7/18:
import pandas
import matplotlib.pyplot as mp
mp.plot([1,2,3])
7/19:
import pandas
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/20:
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/21:
import matplotlib.pyplot as plt
plt.figure
plt.plot([1,2,3])
7/22:
import matplotlib.pyplot as plt
plt.figure()
plt.plot([1,2,3])
7/23:
import matplotlib.pyplot as plt
plt.figure()
plt.plot([1,2,3])
%matplotlib inline
7/24:
%matplotlib inline 
import matplotlib.pyplot as plt
plt.figure()
plt.plot([1,2,3])
%matplotlib inline
7/25:
%matplotlib inline 
import matplotlib.pyplot as plt
plt.figure()
plt.plot([1,2,3])
7/26:
%matplotlib inline 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/27:
%matplotlib inline 
import matplotlib.pyplot as plt
plt.figure()
plt.plot([1,2,3])
7/28:
%matplotlib inline 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/29:
%matplotlib notebook 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
 8/1:
%matplotlib notebook 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
 8/2:
%matplotlib notebook 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/30:
%matplotlib notebook 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/31:
%matplotlib notebook 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/32:
%matplotlib notebook 
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/33:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/34:
%matplotlib
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/35:
%matplotlib
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/36:
%matplotlib
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/37:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/38:
%matplotlib qt
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/39:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
7/40:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print a
7/41:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print (a)
7/42:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print (a)
7/43: %quickref
7/44:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print (a)
%pastebin
7/45:
%matplotlib inline
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print (a)
7/46:
%matplotlib inline
%pastebin
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print (a)
7/47:
%matplotlib inline
%pastebin gg
import matplotlib.pyplot as plt
plt.plot([1,2,3])
a = 'l'
print (a)
7/48:
%matplotlib inline
import numpy as np
In [3]:
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
7/49:
%matplotlib inline
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
7/50:
%matplotlib inline
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
7/51:
%matplotlib inline
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
7/52:
%matplotlib inline
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
print (plt)
 9/1:
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
 9/2:
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
10/1:
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
10/2:
%matplotlib inline
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
11/1:
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
11/2:
%matplotlib inlineimport matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
11/3:
%matplotlib inline
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 3*np.pi, 500)
plt.plot(x, np.sin(x**2))
plt.title('A simple chirp');
13/1:
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
13/2:
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]
13/3: records
13/4: records[1]
13/5: records[2]
13/6: records[3]
13/7: time_zones = [rec['tz'] for rec in records if 'tz' in rec]
13/8:
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zones
14/1:
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]
14/2:
import pandas as pd
from pandas import DataFrameframe, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = dataframe(records)
14/3:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = dataframe(records)
14/4:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = DataFrame(records)
14/5:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = DataFrame(records)
df
15/1:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = DataFrame(records)
df
15/2:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = DataFrame(records)
df['tz'][:10]
15/3:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

df = DataFrame(records)
df['tz']
15/4:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df
df = DataFrame(records)
df['tz']
15/5:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df
df = DataFrame(records)
df['tz']
15/6:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df
df = DataFrame(records)
df['tz']
15/7:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df
df = DataFrame(records)
df['tz']
15/8:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
df
df['tz']
15/9:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
df
15/10:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
df[u]
15/11:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
df['u']
15/12:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
df[12]
15/13:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[12]
15/14:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[12]['u']
15/15:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]['u']
15/16:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[12]['u']
15/17:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]['u']
15/18:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
15/19:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
tz_counts[:10].plot(kind='barh', rot=0)
15/20:
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
records[:10].plot(kind='barh', rot=0)
15/21:
%load matplolib
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
records[:10].plot(kind='barh', rot=0)
15/22:
%load matplotlib
import pandas as pd
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
records[:10].plot(kind='barh', rot=0)
15/23:
%load matplotlib
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
records[:10].plot(kind='barh', rot=0)
15/24:

import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
records[:10].plot(kind='barh', rot=0)
15/25:

import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot(kind='barh', rot=0)
15/26:
%load matplotlib
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot(kind='barh', rot=0)
15/27:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot(kind='barh', rot=0)
15/28:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot(kind='barh', rot=0)
15/29:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot()
15/30:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot()
15/31:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df.plot(
15/32:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
15/33: df.plot((kind='barh', rot=0))
15/34: df.plot()
15/35: df.plot((kind='barh', rot=0))
17/1:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
17/2:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz']
17/3:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].valuecounts
17/4:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].valuecounts
17/5:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].valuecounts
17/6:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
17/7:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
df['tz'].value_counts
17/8:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
17/9:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
17/10:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
17/11:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
df.value_counts
17/12:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
17/13:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)

df['tz'].value_counts
17/14:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
17/15:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
df['tz'].value_counts
17/16:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
tz_Counts=df['tz'].value_counts
17/17:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
tz_Counts=df['tz'].value_counts
tz_Counts
17/18:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
tz_Counts=df['tz'].value_counts
tz_Counts[:10]
17/19:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
tz_Counts=df['tz'].value_counts()
tz_Counts[:10]
17/20:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
records[13]
tz_Counts=df['tz'].value_counts()
tz_Counts[:100]
17/21:
import random, string

def randomword(length):
   return ''.join(random.choice(string.lowercase) for i in range(length))

randomword(4)
17/22:
import random, string

def randomword(length):
   return ''.join(random.choice(string) for i in range(length))

randomword(4)
17/23:
import random, string

def randomword(length):
   return ''.join(random.choice(string.string.ascii_lowercase) for i in range(length))

randomword(4)
17/24:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/25:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/26:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/27:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/28:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/29:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/30:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(4)
17/31:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/32:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/33:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/34:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/35:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/36:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/37:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/38:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/39:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/40:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/41:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/42:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/43:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/44:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/45:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/46:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/47:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/48:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/49:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/50:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/51:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/52:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/53:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/54:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/55:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/56:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/57:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/58:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/59:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/60:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/61:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/62:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/63:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/64:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/65:
import random, string

def randomword(length):
   return ''.join(random.choice(string.ascii_lowercase) for i in range(length))

randomword(5)
17/66:
import random, string

def randomword(length):
   return ''.join(random.choice() for i in range(length))

randomword(5)
17/67:
import random, string

def randomword(length):
   return ''.join(random.choice(1) for i in range(length))

randomword(5)
17/68:
import random, string

def randomword(length):
   return ''.join(random.choice([]) for i in range(length))

randomword(5)
17/69:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

randomword(5)
17/70:
import random, string

def randomword(length):
   return ''.join(random.choice([1,2]) for i in range(length))

randomword(5)
17/71:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q'])
17/72:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/73:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/74:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/75:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/76:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/77:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/78:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
17/79:
import random, string

def randomword(length):
   return ''.join(random.choice(['q','q']) for i in range(length))

random.choice(['q','q','k'])
18/1:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
df['tz'].value_counts()
18/2:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
DataFrame
18/3:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
DataFrame.values
18/4:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
DataFrame.value_counts
18/5:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
DataFrame.value_counts()
18/6:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type
18/7:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type DataFrame
18/8:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type DataFrame()
18/9:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type df()
18/10:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type df
18/11:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
typeof df
18/12:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
typeof() df
18/13:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
typeof 0
18/14:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
typeof( 0)
19/1:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
typeof(0)
19/2:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(0)
19/3:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(df)
19/4:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
#tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(tz_Counts)
19/5:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(tz_Counts)
19/6:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(DataFrame)
19/7:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(DataFrame(records))
19/8:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(DataFrame(records)['tz'])
20/1:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(DataFrame(records)['tz'])
20/2:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(DataFrame(records)['tz'])

%loadfile Ch02_1.py
20/3:
%matplotlib inline
import pandas as pd
import matplotlib
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]
df = DataFrame(records)
#records[13]
tz_Counts=df['tz'].value_counts()
#tz_Counts[:100]
type(DataFrame(records)['tz'])

%load Ch02_1.py
20/4:
# %load Ch02_1.py


# In[2]:

import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]


# In[8]:

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zoness
20/5:
# %load Ch02_1.py


# In[2]:

import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]


# In[8]:

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zones
20/6:
# %load Ch02_1.py


# In[2]:

import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]


# In[8]:

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zones
20/7:
# %load Ch02_1.py


# In[2]:

import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]


# In[8]:

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zones
20/8:
%load Ch02_1.py


# In[2]:

import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]


# In[8]:

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zones
20/9:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zoness
20/10:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zoness
20/11:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zoness
20/12:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zoness
20/13:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zoness
20/14:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zonesss
20/15:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zonesss
20/16:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zonesss
20/17:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zonesss
20/18:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
time_zonesss
20/19:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones)
20/20:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones)
20/21:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(rec['tz'])
20/22:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(rec['tz'])
20/23:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
20/24:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
20/25:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/26:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/27:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/28:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/29:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/30:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/31:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/32:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/33:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/34:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/35:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
#print time_zones
20/36:
%load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print time_zones
20/37: %load Ch02_1.py
20/38:
# %load Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/39:
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]



time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/40:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/41:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
frame['tz'].fillna('Missing')
20/42:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
frame['tz'].fillna('Missing')
20/43:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
frame['tz'].fillna('Missing')
20/44:
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

records[0]

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
frame['tz'].fillna('Missing')
20/45:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
 from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/46:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/47:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
 from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/48:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/49:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/50:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/51:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/52:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/53:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/54:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/55:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/56:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/57:
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/58:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
print (time_zones)
20/59:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
frame['tz'].fillna('Missing')
20/60:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame, Series
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
type(frame['tz'].fillna('Missing'))
20/61:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
type(frame['tz'].fillna('Missing'))
20/62:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
type(frame['tz'].fillna('Missing'))
20/63:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
type(frame['tz'])
20/64:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
type(frame['tz'])
20/65:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
Help type(frame['tz'])
20/66:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help type(frame['tz'])
20/67:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help type(frame['tz'])
20/68:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help type(frame['tz'])
20/69:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help() type(frame['tz'])
20/70:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help(frame['tz'])
20/71:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help(frame)
20/72:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help(frame[1,2,3])
20/73:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
help(frame['tz'])
20/74:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
frame['tz'])
20/75:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
frame['tz']
20/76:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
type(frame['tz'])
20/77: type(frame['tz'])
20/78: type(frame)
20/79: type(frame['tz'])
20/80: type(frame)
20/81: type(frame)
20/82: type(frame)
20/83: type(frame)
20/84: type(frame)
20/85: type(frame['tz'])
20/86:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
20/87: type(frame)
20/88: type(frame['tz'])
20/89:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
20/90: type(frame)
20/91: type(frame['tz'])
20/92:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
20/93: type(frame)
20/94: type(frame['tz'])
20/95:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
pydoc
21/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
pydoc
21/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
pydoc
21/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type
21/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
21/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
21/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x)
21/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x)
21/8:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
$$ P(A \mid B) = \frac{P(B \mid A) \, P(A)}{P(B)} $$
21/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/12: type(frame['tz'])
21/13:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
https://github.com/Saptadeep/tythys/blob/master/Ch02_1.ipynb
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/14:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
https://github.com/Saptadeep/tythys/blob/master/Ch02_1.ipynb
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/15:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/16:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/17:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path) print]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/18:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
for line in open(path)
 print(line)

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/19:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
for line in open(path):
 print(line)

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/20:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
for line in open(path):
 print(line)
 print(''-------')

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/21:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
for line in open(path):
 print(line)
 print('------------------------------------------------')

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/22:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

for line in records:
 print(line)
 print('------------------------------------------------')
frame = DataFrame(records)

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/23:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/24:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

for line in frame[]:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/25:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])
?type

%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/26:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/27:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)

for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/28:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print len(frame)
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/29:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print frame.len
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/30:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (frame.len)
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/31:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (frame.len())
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/32:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame)
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/33:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
       
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/34:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (frame[0])

for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/35:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (frame['tz'])

for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/36:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (frame['tz'])
type(frame)
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/37:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (frame['tz'])
type(frame)
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/38:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (frame['tz'])
print(type(frame))
for line in frame:
 print(line)
 print('------------------------------------------------')

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/39:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print(type(frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/40:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'

records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/41:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/42:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/43:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/44:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/45:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/46:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/47:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/48:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/49:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/50:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
type(time_zones[0])


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/51:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/52:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/53:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/54:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/55:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/56:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/57:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/58:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/59:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/60:
%pdb# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
print(frame.index)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/61:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
print(frame.index)
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/62:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb()
print(frame.index)
pdb()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
21/63:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb
print(frame.index)
pdb
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
22/1:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])

print(frame.index)

print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hit(x);
23/1:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])

print(frame.index)

print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
23/2:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
23/3:
%pdb
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
24/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
24/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
from pandas import DataFrame
import json
import pdb
pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
25/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
26/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
27/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
pdb.set_trace()
print(frame.index)
pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
28/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
print(frame.index)
#pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))


time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
29/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
print(frame.index)
#pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))

print frame[]'tz'].fillna('Missing')
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
29/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
print(frame.index)
#pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))

print frame['tz'].fillna('Missing')
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
29/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
print(frame.index)
#pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))

pprint frame['tz'].fillna('Missing')
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
29/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
print(frame.index)
#pdb.set_trace()
print (len(frame))
print (len(frame['tz']))
print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
x = numpy.linspace(0, 1, 1000)**1.5
plt.hist(x);
29/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
#print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
#print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
#print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/8:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
#print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
#print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
#print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/12:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/13:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

print (frame['tz'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/14:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

print (frame['z'].fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/15:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

print (frame.fillna('Missing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
29/16:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

#clean_tz = frame['tz'].fillna('Missing')
clean_tz[clean_tz == ''] = 'Unknown'

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

#clean_tz = frame['tz'].fillna('Missing')
clean_tz[clean_tz == ''] = 'Unknown'

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

#clean_tz = frame['tz'].fillna('Missing')
print (clean_tz[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

clean_tz = frame['tz'].fillna('Missing')
print (clean_tz[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))
print((frame))

clean_tz = frame['tz'].fillna('Missing')
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/8:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
#clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/12:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/13:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

#clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/14:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

#clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
#clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
30/15:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

#clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
#clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

#clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
#clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

#clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
#clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('Missing')

print ('print (clean_tz)')
#clean_tz[clean_tz == ''] = 'Unknown'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('Mfffissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
31/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
32/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
32/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
32/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
32/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
33/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame('a')
33/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame[]'a']
33/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a']
33/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].plot()
33/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot()
33/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot()
33/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='barh')
33/8:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar')
33/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0))
33/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
33/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
33/12: frame.a.dropna()
33/13: frame.tz.dropna()
33/14: frame.tz
33/15: frame.a
33/16: frame.a.split()
33/17: frame.a[0].split()
33/18: frame.a[0]
33/19: frame.a[0].split
33/20: frame.a[0].split()
33/21: frame.a[0]
33/22:
frame.a[0]
frame.a[2]
33/23:
frame.a[0]
frame.a[2]
33/24:
frame.a[0]
frame.a[2]
33/25:
pprint frame.a[0]
frame.a[2]
33/26:
pprint (frame.a[0])
frame.a[2]
33/27:
pprint(frame.a[0])
frame.a[2]
33/28:
print(frame.a[0])
frame.a[2]
33/29:
print(frame.a[0]).split('A')
frame.a[2]
33/30:
print(frame.a[0].split('A'))
frame.a[2]
33/31:
print(type(frame.a[0]).split('A'))
frame.a[2]
33/32:
print(type(frame.a[0]))
frame.a[2]
33/33:
print(type(frame.a[0]))
frame.a[2]
np.where()
33/34:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
33/35:
print(type(frame.a[0]))
frame.a[2]
np.where()
34/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame
import json, numpy
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
34/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, series
import json, 
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
34/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
34/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
34/5:
print(type(frame.a[0]))
frame.a[2]
34/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
type(result)
34/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results = Series([x.split()[0] for x in frame.a.dropna()])
type(results)
34/8:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
34/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
type(results1)
34/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
(results1[0]
34/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
34/12:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[5]
34/13:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
34/14:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
34/15:
print(type(frame.a[0]))
frame.a[2]
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
34/16:
print(type(frame.a[0]))
frame.a[2]
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
results1
34/17:
print(type(frame.a[0]))
frame.a[2]
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/18:
print(type(frame.a[0]))
print(frame)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/19:
print(type(frame.a[0]))
print(frame['a'])
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/20:
print(type(frame.a[0]))
print(type(frame['a']))
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/21:
print(type(frame.a[0]))
print(type(frame.)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/22:
print(type(frame.a[0]))
print(type(frame.a)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/23:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/24:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame])
print(results1[0])
results1[1]
print(results1)
34/25:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/26:
print(type(frame.a[0]))
print(type(frame.a))
print(frame)
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
34/27:
print(type(frame.a[0]))
print(type(frame.a))
print(frame)
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(results1)
print('print(results2):')
print(results2)
34/28:
print(type(frame.a[0]))
print(type(frame.a))
print(frame)
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('print(results1):')
print(results1)
print('print(results2):')
print(results2)
34/29:
print(type(frame.a[0]))
print(type(frame.a))
print(frame)
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print('results1:')
print(results1)
print('results2:')
print(results2)
34/30:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print('frame:')
print(results1)
print('results2:')
print(results2)
34/31:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print(frame)
print(results1)
print('results2:')
print(results2)
34/32:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('/nframe:')
print(frame)
print(results1)
print('results2:')
print(results2)
34/33:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print(/n'frame:')
print(frame)
print(results1)
print('results2:')
print(results2)
34/34:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print(frame)
print(results1)
print('results2:')
print(results2)
34/35:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print(frame)
print('results1:')
print(results1)
print('results2:')
print(results2)
34/36:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split()[0] for x in frame])
results2 = Series([x.split() for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print(frame)
print('results1:')
print(results1)
print('results2:')
print(results2)
34/37:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split() for x in frame])
results2 = Series([x.split() for x in frame.a.dropna()])
print(results1[0])
results1[1]
print('frame:')
print(frame)
print('results1:')
print(results1)
print('results2:')
print(results2)
34/38:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split() for x in frame])
results2 = Series([x.split() for x in frame])
results3 = Series([x.split() for x in frame.a.dropna()])
print('frame:')
print(frame)
print('results1:')
print(results1)
print('results2:')
print(results2)
print('results3:')
print(results3)
34/39:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x for x in frame])
results2 = Series([x.split() for x in frame])
results3 = Series([x.split() for x in frame.a.dropna()])
print('frame:')
print(frame)
print('results1:')
print(results1)
print('results2:')
print(results2)
print('results3:')
print(results3)
34/40:
print(type(frame.a[0]))
print(type(frame.a))
results1 = ([x.split() for x in frame])
results2 = Series([x.split() for x in frame])
results3 = Series([x.split() for x in frame.a.dropna()])
print('frame:')
print(frame)
print('results1:')
print(results1)
print('results2:')
print(results2)
print('results3:')
print(results3)
35/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print(results1, end=" ")
35/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print(results1, \n)
35/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print(results1+'\n')
35/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n')
print(results1)
35/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1)
35/6:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'/\')
35/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'\')
35/8:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'\n')
35/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'\n', '\n')
35/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'\n', '\n','---')
35/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'---')
35/12:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n',results1,'\n---')
35/13:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('\n---',results1,'\n---')
35/14:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('---\n',results1,'\n---')
35/15:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('---\n',results1,'\n---', end='')
35/16:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('---\nresulrs',results1,'\n---', end='')
35/17:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('---\nresults1:',results1,'\n---', end='')
35/18:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


%matplotlib inline
from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
print('---\nresults1:',results1,'\n---')
37/1: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/2: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/3: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/4: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/5: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/6: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/7: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/8: %run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/9:
%matplotlib inline
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
37/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
37/11:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
38/1:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
38/2:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
38/3:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
38/4:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
38/5:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
%run D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
?frame
38/6: %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_2.py
38/7:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_2.py
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
#%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
38/8:
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_2.py
#%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]
38/9:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_2.py
%load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
#%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]

frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1
frame['a'].value_counts().plot(kind='bar',rot=0)
38/10:
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
# %load D:\Eclipse_Workspace\PyForDataAnalysis\Ch02_1.py
#%matplotlib inline
#%pdb
from pandas import DataFrame, Series
import json
import numpy as np
#import pdb
#pdb.set_trace()
#path = 'D:/Eclipse_Workspace/pydata-book-master/PyForDataAnalysis_Extracted/ch02/usagov_bitly_data2012-03-16-1331923249.txt'
path = 'D:/Eclipse_Workspace/zz1.py'
records = [json.loads(line) for line in open(path)]
a = 1
a
%reset -f
a
frame = DataFrame(records)
frame['index'] = frame.index
#print(frame['index'])
#pdb.set_trace()
#print(frame.index)
#pdb.set_trace()
#print (len(frame))
#print (len(frame['tz']))

print ('print((frame)):')

print((frame))

clean_tz = frame['tz'].fillna('KeyItselfMissing')

print ('print (clean_tz)')
clean_tz[clean_tz == ''] = 'KeyPresent_ValueMissing'
print (clean_tz) #[clean_tz == ''] = 'Unknown')

print (frame.fillna('KeyItselfMissing'))
time_zones = [rec['tz'] for rec in records if 'tz' in rec]
print(time_zones)


from matplotlib import pyplot as plt
import numpy
#x = numpy.linspace(0, 1, 1000)**1.5
#plt.hist(x);
frame['a'].value_counts().plot(kind='bar',rot=0)
results1 = ([x.split()[0] for x in frame.a.dropna()])
results2 = Series([x.split()[0] for x in frame.a.dropna()])
results1[0]
results1[1]
results1

frame['a'].value_counts().plot(kind='bar',rot=0)
39/1: print(1)
39/2: e()
40/1: p(9)
40/2: ok
40/3: np.array
40/4: np.array
40/5: e()
41/1:
import readline
readline.write_history_file('/home/ahj/history')
41/2:
import readline
readline.write_history_file('/home/ahj/history')
41/3: c()
41/4: import readline
41/5: import readline
41/6: %save my_useful_session 10-20 23
41/7: p()
41/8: p(1)
41/9: p(1)
41/10: p(1)
41/11: p(1)
41/12: %save my_useful_session
41/13: %save my_useful_session 1-12
41/14: e()
42/1: e()
43/1: e(88)
43/2: cls
43/3: e()
44/1: c()
44/2: d = [user id: 0, Name: 'Hero']
44/3: d = [uid: 0, Name: 'Hero']
44/4: d = ['uid': 0, 'Name': 'Hero']
44/5: d = dict(['uid': 0, 'Name': 'Hero'])
44/6: d = dict(['uid': 0, 'Name': 'Hero'])
44/7: users = [{'uid': 0, 'Name': 'Hero'},{'uid': 1, 'Name': 'Susan'}]
44/8: conn = ((0,1),(1,2))
44/9: conn
44/10: conn = [(0,1),(1,2)]
44/11: type(con)
44/12: type(conn)
44/13: type(conn[0])
44/14: x,y for conn
44/15: x,y for conn:
44/16: x,y for e in conn:
44/17:
for x,y 
    in conn:
44/18:
for x,y in conn:
    p(x)
    p(y)
44/19:
for x,y in conn:
    p(users[x])
    p(y)
44/20:
for x,y in conn:
    p(users[x]['x'])
    p(y)
44/21:
for x,y in conn:
    p(users[x][x])
    p(y)
44/22:
for x,y in conn:
    p(users[x].x)
    p(y)
44/23:
for x,y in conn:
    p(users[x])
    p(y)
44/24: conn.0
44/25: conn[0]
44/26: users[0]
44/27: users[0].uid
44/28: users.0
44/29: users['0]
44/30: users['0]
44/31: 111111
44/32: users[0].uid
44/33: users
44/34: users['Name':'Hero']
44/35: users['Name'='Hero']
44/36: users[0][0]
44/37: type(users)
44/38: type(users[0])
44/39: type(users[0].[0])
44/40: type(users[0].0)
44/41: type(users[0].0))
44/42: type(users[0].0)
44/43: users[0].0
44/44: users[0]
44/45: users[0]['Name']
44/46: users[x]['Name']
44/47: type(users[0])
44/48: users = [{'uid': 0, 'name': 'Hero'},{'uid': 1, 'name': 'Susan'}]
44/49: users = [{'uid': 0, 'name': 'Hero'},{'uid': 1, 'name': 'Susan'}]
44/50: conn = ((0,1),(1,2))
44/51:
for x,y in conn:
    print(users[x]['name'])
    print(users[y]['name'])
44/52:
for x,y in conn:
    print(users[x]['name'])
    print(users[y]['name'])
44/53: users = [{'uid': 0, 'name': 'Hero'},{'uid': 1, 'name': 'Susan'},{'uid': 2, 'name': 'Sue'}]
44/54:
for x,y in conn:
    print(users[x]['name'])
    print(users[y]['name'])
44/55: users = {{'uid': 0, 'name': 'Hero'},{'uid': 1, 'name': 'Susan'},{'uid': 2, 'name': 'Sue'}}
44/56: users = {'uid': 0, 'name': 'Hero'},{'uid': 1, 'name': 'Susan'},{'uid': 2, 'name': 'Sue'}}
44/57: d = {'':'','',''}
44/58: d = {'':'','':''}
44/59: d['']
44/60: d[0]
44/61:
for user in users:
 
 
 user["friends"] = []
44/62: user
44/63: usesr
44/64: users
44/65:
users = [
{ "id": 0, "name": "Hero" },
{ "id": 1, "name": "Dunn" },
{ "id": 2, "name": "Sue" },
{ "id": 3, "name": "Chi" },
{ "id": 4, "name": "Thor" },
{ "id": 5, "name": "Clive" },
{ "id": 6, "name": "Hicks" },
{ "id": 7, "name": "Devin" },
{ "id": 8, "name": "Kate" },
{ "id": 9, "name": "Klein" }
]
44/66:
friendships = [(0, 1), (0, 2), (1, 2), (1, 3), (2, 3), (3, 4),
(4, 5), (5, 6), (5, 7), (6, 8), (7, 8), (8, 9)]
44/67:
for user in users:
user["friends"] = []
44/68:
for user in users:
  
  user["friends"] = []
44/69: users
44/70:
for i, j in friendships:
 # this works because users[i] is the user whose id is i
 users[i]["friends"].append(users[j]) # add i as a friend of j
 users[j]["friends"].append(users[i]) # add j as a friend of i
44/71: users
44/72: users[0]
44/73: sum(9,3)
44/74: sum(9,3)e
44/75: e()
45/1: a=[1,2,3,4]
45/2: a
45/3:
for b,c in a:
     p("b", b)
     p('a',a)
45/4:
for b,c in a:
     p("b", b)
     p('c',c)
45/5:
for b in a:
     p("b", b)
45/6:
for b in a:
     p(b)
45/7:
for b in a:
     pass
45/8:
for b, c in a:
     pass
45/9:
for b in a:
     p(b, 'b')
45/10: e()
46/1: l = [9,8,7]
46/2: t = [9,8,7]
46/3: l
46/4: t
46/5: t = 9,8,7
46/6: t
46/7: t
46/8: t
46/9: for e in t print(e)
46/10: x for e in t
46/11: print(e) for e in t
46/12: e*1 for e in t
46/13: [e*1] for e in t
46/14: [e*1] for e in t:
46/15:
for e in t:
    pass
46/16:
for e in t:
    pass
E()
e()
46/17: e()
46/18: e()
46/19: e
47/1: e()
48/1:
from collections import Counter
  c = Counter([0, 1, 2, 0])
48/2:
from collections import Counter
c = Counter([0, 1, 2, 0])
48/3: c
48/4:
from collections import Counter
c = Counter([330, 330, 


2, 0])
48/5: c
48/6:
from collections import Counter
c = Counter([330, 330, 


2, 0])
48/7:
c = Counter"A Counter turns a sequence of values into a defaultdict(int)-like object mapping
keys to counts. We will primarily use it to create histograms:"
48/8:
c = Counter"A Counter turns a sequence of values into a defaultdict(int)-like object mapping \
keys to counts. We will primarily use it to create histograms:"
48/9:
c = Counter("A Counter turns a sequence of values into a defaultdict(int)-like object mapping \
keys to counts. We will primarily use it to create histograms:")
48/10: c
48/11:
c = Counter("A Counter turns a sequence of values into a defaultdict(int)-like object mapping \
keys to counts. We will primarily use it to create histograms:")
48/12:
for word in "A Counter turns a sequence of values into a defaultdict(int)-like object mapping \
keys to counts. We will primarily use it to create histograms:":
      print(word)
48/13:
for word in "A Counter turns a sequence of values into a defaultdict(int)-like object mapping \
keys to counts. We will primarily use it to create histograms:":
      print(word)
49/1: def class c1():
49/2: 4exit()
49/3: 4exit()
50/1: "" and "sdf"[0]
50/2: "" and "sdf"[0] == True
50/3: "" and "sdf"[0] = d
50/4: d = "" and "sdf"[0]
50/5: d
50/6: d = "sasas" and ""[0]
50/7: d = "sasas" and ""
50/8: d
50/9: d = None and "sdf"[0]
50/10: d
50/11: s  ='Hgjk'
50/12: d = None and s[0]
50/13: d
50/14: d = None and s[0]s
50/15: s
50/16: s[0]
50/17: d
50/18: d = None and s[0]
50/19: d
50/20: d = s[0] and None and s[0]
50/21: d
50/22: d = s[0] and None
50/23: d
50/24: d = s[0]
50/25: d
50/26: d = 'h' and None
50/27: d
50/28: d1 = 'h' and None
50/29: d1
50/30: 11111111
50/31: d1 = 'h' or None
50/32: d1
50/33: "" and "sdf"[0]
50/34: "" or "sdf"[0]
50/35: type("" or "sdf"[0])
50/36: type("" === "sdf"[0])
50/37: "" === "sdf"[0]
50/38: type("" == "sdf"[0])
50/39: type("" and "sdf"[0])
50/40: all([])
50/41: set(1)
50/42: set(1,2)
50/43: set([1, 2, 3, 1, 2, 3]1,2)
50/44:
set([1, 2, 3, 1, 2, 3]





)
50/45: tttttt
50/46: s  for s in range(7) if s%2
50/47: [s  for s in range(7) if s%2]
50/48: [s  for s in range(7) if s%2==0]
50/49: zeroes = [0 for _ in d]
50/50: zeroes = [0 for _ in s2]
50/51: zeroes = [0 for _ in d2]
50/52: zeroes = [0 for _ in d2]
50/53: zeroes = [0 for _ in s1]
50/54: zeroes = [0 for _ in 1]
50/55: zeroes = [0 for _ in (1)]
50/56: zeroes = [0 for _ in (1,)]
50/57: zeros
50/58: zeroes
50/59: zeroes = [0 for * in (1,)]
50/60: [x for x in range(5) if x % 2 == 0]
50/61: x for x in range(5) if x % 2 == 0
50/62: x for x in range(5) if x % 2 == 0:
50/63: for x in range(5) if x % 2 == 0:
50/64: x
50/65: [x for x in range(5) if x % 2 == 0]
50/66: x
50/67: x =[x for x in range(5) if x % 2 == 0]
50/68: x
50/69: x ={[x for x in range(5) if x % 2 == 0]}
50/70: x
50/71: x ={x for x in range(5) if x % 2 == 0}
50/72: x
50/73: type(x)
50/74: x ={x:x for x in range(5) if x % 2 == 0}
50/75: x
50/76: x ={x:x*x for x in range(5) if x % 2 == 0}
50/77: x
50/78: x ={x:x**x for x in range(5) if x % 2 == 0}
50/79: x
50/80:
pairs = [(x, y)
for x in range(10)
for y in range(10)]
50/81: x
50/82: pairs
50/83:
pairs = [(x, y)
for x in range(1
)
for y in range(1)]
50/84: pairs
50/85:
pairs = [(x, y)
for x in range(2)
for y in range(2)]
50/86: pairs
50/87:
random.seed(10) # set the seed to 10
print random.random() # 0.57140259469
random.seed(10) # reset the seed to 10
print random.random()
50/88:
random.seed(10) # set the seed to 10
print (random.random()) # 0.57140259469
random.seed(10) # reset the seed to 10
print (random.random())
50/89:
random.seed(10) # set the seed to 10
print (random.random()) # 0.57140259469
random.seed(10) # reset the seed to 10
print (random.random())
50/90: import random
50/91:
random.seed(10) # set the seed to 10
print (random.random()) # 0.57140259469
random.seed(10) # reset the seed to 10
print (random.random())
50/92:
random.seed(10) # set the seed to 10
print (random.random()) # 0.57140259469
random.seed(10) # reset the seed to 10
print (random.random())
50/93: print (random.random())
50/94: print (random.random())
50/95:
random.seed(10) # set the seed to 10
print (random.random()) # 0.57140259469
random.seed(10) # reset the seed to 10
print (random.random())
50/96: print (random.random())
50/97: print (random.random())
50/98: print (random.random())
50/99: random.choice(["Alice", "Bob", "Charlie"])
50/100: random.choice(["Alice", "Bob", "Charlie"])
50/101: random.choice(["Alice", "Bob", "Charlie"])
50/102: random.choice(["Alice", "Bob", "Charlie"])
50/103: random.choice(["Alice", "Bob", "Charlie"])
50/104: random.choice(["Alice", "Bob", "Charlie"])
50/105: random.choice(["Alice", "Bob", "Charlie"])
50/106: random.choice(["Alice", "Bob", "Charlie"])
50/107: random.choice(["Alice", "Bob", "Charlie"])
50/108: random.choice(["Alice", "Bob", "Charlie"])
50/109: random.choice(["Alice", "Bob", "Charlie"])
50/110: random.choice(["Alice", "Bob", "Charlie"])
50/111:
[random.choice(range(10))
for _ in range(4)]
50/112:
[random.choice(range(10))
for _ in range(4)]
50/113:
[random.choice(range(10))
for _ in range(4)]
50/114:
[random.sample(range(10))
for _ in range(4)]
50/115:
[random.sample(range(10),6)
for _ in range(4)]
50/116:
[random.sample(range(10)







)






for _ in range(4)]
51/1:
from operator import mul
mul(3)
51/2:
from operator import mul
mul(3,1)
51/3: from functools import partial
51/4: triple = partial(mul, 3)
51/5: triple()
51/6: triple(2)
51/7: triple(2,4)
51/8: mul(9)
51/9: two_to_the_power = partial(exp, 2)
51/10: from operator import mul, exp
51/11:
def exp(x,y):
    return x**y
51/12: exp(9,2)
51/13: exp(9,3)
51/14: two_to_the_power = partial(exp, 2)
51/15: two_to_the_power(3)
51/16: two_to_the_power = partial(exp, y=2)
51/17: two_to_the_power(3)
51/18: e()
52/1: [2,3,4]
52/2: a=[2,3,4]
52/3: zip[a]
52/4: zip(a)
52/5: list(a)
52/6: b=[2,3,4]
52/7: zip(a,b)
52/8: list(zip(a,b))
52/9: c= [a,b]
52/10: c
52/11: list(zip(c))
52/12: d=c
52/13: list(zip(c,d))
52/14:
def sq_(x):
     return x**2
52/15: sq_(2)
52/16: reduce(sq(), [1])
52/17: reduce(sq(), [1])
52/18: from functools import reduce
52/19: reduce(sq(), [1])
52/20: reduce(sq(_), [1])
52/21: reduce(sq_, [1])
52/22: reduce(sq_, [1,2,3])
52/23: reduce(sq_(), [1,2,3])
52/24: reduce(sq_(X), [1,2,3])
52/25: sq_
52/26: s
52/27:
def mm(2, 3):
  return range(4)
52/28:
def mm(i,j):
  return range(4)
52/29: mm(1,3)
52/30:
def mm(i,j):
  return range(4)
52/31: range(5)
52/32: list(range(5))
52/33:
def mm(i,j):
  return list(range(4))
52/34: mm(1,3)
52/35:
def mm(i,j):
  my_matrix =[]
  for (n<=i;n++)):
  
  
  
  
  while return list(range(4))
52/36:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i;;n++)):
     my_mat += list(range(4))
     return my_mat
52/37:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i,,n++)):
     my_mat += list(range(4))
     return my_mat
52/38:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i,n++):
     my_mat += list(range(4))
     return my_mat
52/39:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i,,n++):
     my_mat += list(range(4))
     return my_mat
52/40:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i,n++):
     my_mat += list(range(4))
     return my_mat
52/41:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i,n++):
     my_mat += list(range(4))
     return my_mat
52/42:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i):
     my_mat += list(range(4))
     return my_mat
52/43:
def make_matrix(i, j):
   my_mat =[]
   for (n<=i)
     my_mat += list(range(4))
     return my_mat
52/44:
def make_matrix(i, j):
   my_mat =[]
   for (n==i)
     my_mat += list(range(4))
     return my_mat
52/45:
def make_matrix(i, j):
   my_mat =[]
   for (n==i):
     my_mat += list(range(4))
     return my_mat
52/46:
def make_matrix(i, j):
   my_mat =[]
   while (n==i):
     my_mat += list(range(4))
     return my_mat
52/47:
def mm(i, j):
   my_mat =[]
   while (n==i):
     my_mat += list(range(4))
     return my_mat
52/48: mm(1,4)
52/49:
def mm(i, j):
   my_mat =[]
   n=0
   while (n<=i):
     my_mat += list(range(4))
    ++n
   return my_mat
52/50:
def mm(i, j):
   my_mat =[]
   n=0
   while (n<=i):
     my_mat += list(range(4))
     ++n
   return my_mat
52/51: mm(9,4)
52/52:
def mm(i, j):
   my_mat =[]
   n=0
   while (n<=i):
     my_mat += list(range(4))
     n++
   return my_mat
52/53:
def mm(i, j):
   my_mat =[]
   n=0
   while (n<=i):
     my_mat += list(range(4))
     n=n+1
   return my_mat
52/54: mm(9,4)
52/55:
def mm(i, j):
   my_mat =[]
   n=0
   while (n<=i):
     my_mat += list(range(4))
     n=n+1
   return my_mat
52/56: w for w in range(4)
52/57: e=[w for w in range(4)]
52/58: e
52/59: m= x for x in [w for w in range(4)]
52/60: m= [x for x in [w for w in range(4)]]
52/61: m
52/62: m= [x,y for x in [w for w in range(4)]]
52/63: m= [x,y for x,y in [w for w in range(4)]]
52/64: m= [x,y for x,y in [w for w in range(4)]]
52/65: e()
52/66: e
52/67: e=none
52/68: e=None
52/69: e()
53/1: e()
54/1: x = range(4)
54/2: x
54/3: list(x)
54/4: x = arange(4)
54/5: y[0] = x
54/6: y = []
54/7: y[0] = x
54/8: y = range(3)
54/9: list(y)
54/10: y[0] = x
54/11: y = [[],[],[]]
54/12: y[0] = x
54/13: y[1] =x
54/14: empty()
54/15: elem = x for elem in y
54/16: [elem = x for elem in y]
54/17: [elem for elem in y]
54/18: y
54/19: y = [[],[],[]]
54/20: [elem=x for elem in y]
54/21: [elem*x for elem in y]
54/22: [elem=x for elem in y]
54/23:
for elem in y:
    elem = x
54/24: y
54/25: elem
54/26:
for elem in y:
    elem = list(x)
54/27: elem
54/28: y
54/29: [i,j] for i in [1,2,3,4]
54/30: [[i] for i in [1,2,3,4] ]
54/31: [[i,i] for i in [1,2,3,4] ]
54/32: [[i,j] for i in [1,2,3,4] j in [22,33,44,55]]
54/33: [[i,j] for i in [1,2,3,4] for j in [22,33,44,55]]
54/34: [[i,j] for i in [1,2,3,4] for j in [22,33,44]]
54/35: [[22,33,44] for i in [1,2,3,4] for j in [22,33,44]]
54/36: [[22,33,44] for i in [1,2,3,4]]
54/37: [[22,33,44] for i in [1,2,3,4,5,6,7,8,9,1,1,1]]
54/38: [[range(3)] for i in [1,2,3,4,5,6,7,8,9,1,1,1]]
54/39: [list{range(3)) for i in range(5)]
54/40: [list(range(3)) for i in range(5)]
54/41: [list(range(3)) for i in range(65)]
54/42: [list(range(103)) for i in range(65)]
54/43: [list(range(13)) for i in range(65)]
54/44: [[96,99,78,76,56] for i in range(65)]
54/45: j=[96,99,78,76,56]
54/46: [j for i in range(65)]
54/47: [j*2 for i in range(65)]
54/48: [j for i in range(65)]
54/49: [j*2 for i in range(65)]
54/50: [+1 for i in range(65)]
54/51: [j+1 for i in range(65)]
54/52: [j*31 for i in range(65)]
54/53: [j*0 for i in range(65)]
54/54: [j for i in range(65)]
54/55: j*8
54/56: j*2
54/57: j*3
54/58: [j[0] for i in range(65)]
54/59: [j[0],j[3] for i in range(65)]
54/60: [[j[0],j[3]] for i in range(65)]
54/61: j=[96,99,78,76,56]
54/62: [j for i in range(5)]
55/1: e()
59/1: import numpy as np
59/2:
X = [[2, 0, -1.4],
 [2.2, 0.2, -1.5],
 [2.4, 0.1, -1],
 [1.9, 0, -1.2]]
59/3: x
59/4:
X = [[2, 0, -1.4],
 [2.2, 0.2, -1.5],
 [2.4, 0.1, -1],
 [1.9, 0, -1.2]]
59/5: x
59/6: X
59/7: print np.cov(np.array(X).T)
59/8: print (np.cov(np.array(X).T))
59/9: e()
63/1: e
63/2: e()
63/3: x
64/1: e()
68/1: _e()
69/1: _c()
69/2: _e()
70/1: e()
71/1: print (np.cov(np.array(X).T))
71/2: 'e
71/3: e()
72/1: from collections import Counter
72/2: a = 'lll df er ttt lll koko sdasda'
72/3: b = a.strip().split()
72/4: b
72/5: c = Counter(b)
72/6: c
72/7: list(c)
72/8: dict(c)
72/9: e()
73/1: with
73/2:
 I recommend the doctor
I visited for Physiotherapy for Osteoarthritis of Knee and Hip
After a prolonged ache in my left knee caused by an injury, I was prescribed knee surgery by three orthopedics whom I sought opinions from. Seeing my hesitation to go for surgery, the last orthopedic (fortunately) recommended me to consult Dr Priyanka for managing my condition by specialized Physiotherapy techniques she has expertise on. I am so glad to write that due to Dr Priyanka's effort, I have been able to delay my knee surgery and continue with my normal work for the past 4 years now. This is no small achievement. Besides the specialized therapy, Dr Priyanka worked with me and suggested lifestyle changes and posture modifications which were very doable. One practical advice she gave for doing the knee exercise in absence of a sturdy table/bed, was to sit on the kitchen shelf (which is always sturdy) and do knee swings. This was an extremely valuable tip for me. Lack of a hard seat was a huge deterrent for doing the exercise during travels. I have seen her interact with other patients too and noticed that she encourages her patients to perform procedures themselves at home, rather than relying on her or other therapists. She goes into the deep of things, explaining the affected muscle groups, bones, tissue, etc. thoroughly. I am indeed very glad to have consulted Dr Priyanka.'
73/3:
 I recommend the doctor
I visited for Physiotherapy for Osteoarthritis of Knee and Hip
After a prolonged ache in my left knee caused by an injury, I was prescribed knee surgery by three orthopedics whom I sought opinions from. Seeing my hesitation to go for surgery, the last orthopedic (fortunately) recommended me to consult Dr Priyanka for managing my condition by specialized Physiotherapy techniques she has expertise on. I am so glad to write that due to Dr Priyanka's effort, I have been able to delay my knee surgery and continue with my normal work for the past 4 years now. This is no small achievement. Besides the specialized therapy, Dr Priyanka worked with me and suggested lifestyle changes and posture modifications which were very doable. One practical advice she gave for doing the knee exercise in absence of a sturdy table/bed, was to sit on the kitchen shelf (which is always sturdy) and do knee swings. This was an extremely valuable tip for me. Lack of a hard seat was a huge deterrent for doing the exercise during travels. I have seen her interact with other patients too and noticed that she encourages her patients to perform procedures themselves at home, rather than relying on her or other therapists. She goes into the deep of things, explaining the affected muscle groups, bones, tissue, etc. thoroughly. I am indeed very glad to have consulted Dr Priyanka.
73/4: with zz==zz
73/5: with 1==1
73/6:
with 1==1:
    pass
74/1:
import requests, json
endpoint = "https://api.github.com/users/saptadeep/repos"
74/2: endpoint
74/3: repos = json.loads(requests.get(endpoint).text)
74/4: repos
74/5: dates = [parse(repo["created_at"]) for repo in repos]
75/1: repos
75/2:
import requests, json
endpoint = "https://api.github.com/users/saptadeep/repos"
75/3: repos = json.loads(requests.get(endpoint).text)
75/4:
from dateutil.parser import parse
dates = [parse(repo["created_at"]) for repo in repos]
month_counts = Counter(date.month for date in dates)
weekday_counts = Counter(date.weekday() for date in dates)
75/5: from collections import Counter
75/6:
from dateutil.parser import parse
dates = [parse(repo["created_at"]) for repo in repos]
month_counts = Counter(date.month for date in dates)
weekday_counts = Counter(date.weekday() for date in dates)
76/1:
import requests, json
endpoint = "https://api.github.com/users/saptadeep/repos"
76/2:
from dateutil.parser import parse
dates = [parse(repo["created_at"]) for repo in repos]

month_counts = Counter(date.month for date in dates)

weekday_counts = Counter(date.weekday() for date in dates)
76/3: repos = json.loads(requests.get(endpoint).text)
76/4:
from dateutil.parser import parse
dates = [parse(repo["created_at"]) for repo in repos]

month_counts = Counter(date.month for date in dates)

weekday_counts = Counter(date.weekday() for date in dates)
76/5: from collections import Counter
76/6:
from dateutil.parser import parse
dates = [parse(repo["created_at"]) for repo in repos]

month_counts = Counter(date.month for date in dates)

weekday_counts = Counter(date.weekday() for date in dates)
76/7:
last_5_repositories = sorted(repos,
key=lambda r: r["created_at"],
reverse=True)[:5]
last_5_languages = [repo["language"]
for repo in last_5_repositories]
76/8: last_5_languages
76/9: last_5_repositories
76/10: r = [],[]
76/11: type(r)
76/12: r = [[],[]]
76/13: type(r)
76/14: e()
77/1: r = [],[]
77/2: r.append(9)
77/3: r.append(9)
77/4: r[0].append(9)
77/5: r
77/6: type(r[0])
77/7: w = [],[]
77/8: type(w)
77/9: type(w[0])
77/10: e()
78/1: e()
79/1: e()
81/1:
from matplotlib.colors import ListedColormap


def plot_decision_regions(X, y, classifier, resolution=0.02):

    # setup marker generator and color map
    markers = ('s', 'x', 'o', '^', 'v')
    colors = ('red', 'blue', 'lightgreen', 'gray', 'cyan')
    cmap = ListedColormap(colors[:len(np.unique(y))])

    # plot the decision surface
    x1_min, x1_max = X[:, 0].min() - 1, X[:, 0].max() + 1
    x2_min, x2_max = X[:, 1].min() - 1, X[:, 1].max() + 1
    xx1, xx2 = np.meshgrid(np.arange(x1_min, x1_max, resolution),
                         np.arange(x2_min, x2_max, resolution))
    Z = classifier.predict(np.array([xx1.ravel(), xx2.ravel()]).T)
    Z = Z.reshape(xx1.shape)
    plt.contourf(xx1, xx2, Z, alpha=0.4, cmap=cmap)
    plt.xlim(xx1.min(), xx1.max())
    plt.ylim(xx2.min(), xx2.max())

    # plot class samples
    for idx, cl in enumerate(np.unique(y)):
        plt.scatter(x=X[y == cl, 0], y=X[y == cl, 1],
                    alpha=0.8, c=cmap(idx),
                    marker=markers[idx], label=cl)
81/2:
ada = AdalineSGD(n_iter=15, eta=0.01, random_state=1)
ada.fit(X_std, y

plot_decision_regions(X_std, y, classifier=ada)
plt.title('Adaline - Stochastic Gradient Descent')
plt.xlabel('sepal length [standardized]')
plt.ylabel('petal length [standardized]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./adaline_4.png', dpi=300)
plt.show()

plt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')
plt.xlabel('Epochs')
plt.ylabel('Average Cost')

plt.tight_layout()
# plt.savefig('./adaline_5.png', dpi=300)
plt.show()
81/3:
ada = AdalineSGD(n_iter=15, eta=0.01, random_state=1)
ada.fit(X_std, y)

plot_decision_regions(X_std, y, classifier=ada)
plt.title('Adaline - Stochastic Gradient Descent')
plt.xlabel('sepal length [standardized]')
plt.ylabel('petal length [standardized]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./adaline_4.png', dpi=300)
plt.show()

plt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')
plt.xlabel('Epochs')
plt.ylabel('Average Cost')

plt.tight_layout()
# plt.savefig('./adaline_5.png', dpi=300)
plt.show()
81/4:
ada = AdalineSGD(n_iter=15, eta=0.01, random_state=1)
ada.fit(X_std, y

plot_decision_regions(X_std, y, classifier=ada)
plt.title('Adaline - Stochastic Gradient Descent')
plt.xlabel('sepal length [standardized]')
plt.ylabel('petal length [standardized]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./adaline_4.png', dpi=300)
plt.show()

plt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')
plt.xlabel('Epochs')
plt.ylabel('Average Cost')

plt.tight_layout()
# plt.savefig('./adaline_5.png', dpi=300)
plt.show()
81/5:
ada = AdalineSGD(n_iter=15, eta=0.01, random_state=1)
ada.fit(X_std, y)

plot_decision_regions(X_std, y, classifier=ada)
plt.title('Adaline - Stochastic Gradient Descent')
plt.xlabel('sepal length [standardized]')
plt.ylabel('petal length [standardized]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./adaline_4.png', dpi=300)
plt.show()

plt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')
plt.xlabel('Epochs')
plt.ylabel('Average Cost')

plt.tight_layout()
# plt.savefig('./adaline_5.png', dpi=300)
plt.show()
81/6:
from numpy.random import see

class AdalineSGD(object):
    """ADAptive LInear NEuron classifier.

    Parameters
    ------------
    eta : float
        Learning rate (between 0.0 and 1.0)
    n_iter : int
        Passes over the training dataset.

    Attributes
    -----------
    w_ : 1d-array
        Weights after fitting.
    errors_ : list
        Number of misclassifications in every epoch.
    shuffle : bool (default: True)
        Shuffles training data every epoch if True to prevent cycles.
    random_state : int (default: None)
        Set random state for shuffling and initializing the weights.
        
    """
    def __init__(self, eta=0.01, n_iter=10, shuffle=True, random_state=None):
        self.eta = eta
        self.n_iter = n_iter
        self.w_initialized = False
        self.shuffle = shuffle
        if random_state:
            seed(random_state)
        
    def fit(self, X, y):
        """ Fit training data.

        Parameters
        ----------
        X : {array-like}, shape = [n_samples, n_features]
            Training vectors, where n_samples is the number of samples and
            n_features is the number of features.
        y : array-like, shape = [n_samples]
            Target values.

        Returns
        -------
        self : object

        """
        self._initialize_weights(X.shape[1])
        self.cost_ = []
        for i in range(self.n_iter):
            if self.shuffle:
                X, y = self._shuffle(X, y)
            cost = []
            for xi, target in zip(X, y):
                cost.append(self._update_weights(xi, target))
            avg_cost = sum(cost)/len(y)
            self.cost_.append(avg_cost)
        return self

    def partial_fit(self, X, y):
        """Fit training data without reinitializing the weights"""
        if not self.w_initialized:
            self._initialize_weights(X.shape[1])
        if y.ravel().shape[0] > 1:
            for xi, target in zip(X, y):
                self._update_weights(xi, target)
        else:
            self._update_weights(X, y)
        return self

    def _shuffle(self, X, y):
        """Shuffle training data"""
        r = np.random.permutation(len(y))
        return X[r], y[r]
    
    def _initialize_weights(self, m):
        """Initialize weights to zeros"""
        self.w_ = np.zeros(1 + m)
        self.w_initialized = True
        
    def _update_weights(self, xi, target):
        """Apply Adaline learning rule to update the weights"""
        output = self.net_input(xi)
        error = (target - output)
        self.w_[1:] += self.eta * xi.dot(error)
        self.w_[0] += self.eta * error
        cost = 0.5 * error**2
        return cost
    
    def net_input(self, X):
        """Calculate net input"""
        return np.dot(X, self.w_[1:]) + self.w_[0]

    def activation(self, X):
        """Compute linear activation"""
        return self.net_input(X)

    def predict(self, X):
        """Return class label after unit step"""
        return np.where(self.activation(X) >= 0.0, 1, -1)
81/7:
ada = AdalineGD(n_iter=15, eta=0.01)
ada.fit(X_std, y)

plot_decision_regions(X_std, y, classifier=ada)
plt.title('Adaline - Gradient Descent')
plt.xlabel('sepal length [standardized]')
plt.ylabel('petal length [standardized]')
plt.legend(loc='upper left')
plt.tight_layout()
# plt.savefig('./adaline_2.png', dpi=300)
plt.show()

plt.plot(range(1, len(ada.cost_) + 1), ada.cost_, marker='o')
plt.xlabel('Epochs')
plt.ylabel('Sum-squared-error')

plt.tight_layout()
# plt.savefig('./adaline_3.png', dpi=300)
plt.show()
81/8:
fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(8, 4))

ada1 = AdalineGD(n_iter=10, eta=0.01).fit(X, y)
ax[0].plot(range(1, len(ada1.cost_) + 1), np.log10(ada1.cost_), marker='o')
ax[0].set_xlabel('Epochs')
ax[0].set_ylabel('log(Sum-squared-error)')
ax[0].set_title('Adaline - Learning rate 0.01')

ada2 = AdalineGD(n_iter=10, eta=0.0001).fit(X, y)
ax[1].plot(range(1, len(ada2.cost_) + 1), ada2.cost_, marker='o')
ax[1].set_xlabel('Epochs')
ax[1].set_ylabel('Sum-squared-error')
ax[1].set_title('Adaline - Learning rate 0.0001')

plt.tight_layout()
# plt.savefig('./adaline_1.png', dpi=300)
plt.show()
81/9:
import numpy as np


class Perceptron(object):
    """Perceptron classifier.

    Parameters
    ------------
    eta : float
        Learning rate (between 0.0 and 1.0)
    n_iter : int
        Passes over the training dataset.

    Attributes
    -----------
    w_ : 1d-array
        Weights after fitting.
    errors_ : list
        Number of misclassifications in every epoch.

    """
    def __init__(self, eta=0.01, n_iter=10):
        self.eta = eta
        self.n_iter = n_iter

    def fit(self, X, y):
        """Fit training data.

        Parameters
        ----------
        X : {array-like}, shape = [n_samples, n_features]
            Training vectors, where n_samples is the number of samples and
            n_features is the number of features.
        y : array-like, shape = [n_samples]
            Target values.

        Returns
        -------
        self : object

        """
        self.w_ = np.zeros(1 + X.shape[1])
        self.errors_ = []

        for _ in range(self.n_iter):
            errors = 0
            for xi, target in zip(X, y):
                update = self.eta * (target - self.predict(xi))
                self.w_[1:] += update * xi
                self.w_[0] += update
                errors += int(update != 0.0)
            self.errors_.append(errors)
        return self

    def net_input(self, X):
        """Calculate net input"""
        return np.dot(X, self.w_[1:]) + self.w_[0]

    def predict(self, X):
        """Return class label after unit step"""
        return np.where(self.net_input(X) >= 0.0, 1, -1)
81/10:
import pandas as pd

df = pd.read_csv('https://archive.ics.uci.edu/ml/'
        'machine-learning-databases/iris/iris.data', header=None)
df.tail()
81/11:
import pandas as pd

df = pd.read_csv('https://archive.ics.uci.edu/ml/'
        'machine-learning-databases/iris/iris.data', header=None)
df.tail()
81/12:
%matplotlib inline
import matplotlib.pyplot as plt
import numpy as np

# select setosa and versicolor
y = df.iloc[0:100, 4].values
y = np.where(y == 'Iris-setosa', -1, 1)

# extract sepal length and petal length
X = df.iloc[0:100, [0, 2]].values

# plot data
plt.scatter(X[:50, 0], X[:50, 1],
            color='red', marker='o', label='setosa')
plt.scatter(X[50:100, 0], X[50:100, 1],
            color='blue', marker='x', label='versicolor')

plt.xlabel('sepal length [cm]')
plt.ylabel('petal length [cm]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./images/02_06.png', dpi=300)
plt.show()
81/13:
%matplotlib inline
import matplotlib.pyplot as plt
import numpy as np

# select setosa and versicolor
y = df.iloc[0:100, 4].values
y = np.wher(y == 'Iris-setosa', -1, 1)

# extract sepal length and petal length
X = df.iloc[0:100, [0, 2]].values

# plot data
plt.scatter(X[:50, 0], X[:50, 1],
            color='red', marker='o', label='setosa')
plt.scatter(X[50:100, 0], X[50:100, 1],
            color='blue', marker='x', label='versicolor')

plt.xlabel('sepal length [cm]')
plt.ylabel('petal length [cm]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./images/02_06.png', dpi=300)
plt.show()
81/14:
%matplotlib inline
import matplotlib.pyplot as plt
import numpy as np

# select setosa and versicolor
y = df.iloc[0:100, 4].values
y = np.where(y == 'Iris-setosa', -1, 1)

# extract sepal length and petal length
X = df.iloc[0:100, [0, 2]].values

# plot data
plt.scatter(X[:50, 0], X[:50, 1],
            color='red', marker='o', label='setosa')
plt.scatter(X[50:100, 0], X[50:100, 1],
            color='blue', marker='x', label='versicolor')

plt.xlabel('sepal length [cm]')
plt.ylabel('petal length [cm]')
plt.legend(loc='upper left')

plt.tight_layout()
#plt.savefig('./images/02_06.png', dpi=300)
plt.show()
82/1: from sklearn.metrics.pairwise import euclidean_distances
82/2: X = [[0], [1], [2], [3]]
82/3:
X = [[0], [1], [2], [3]]
y = [0, 0, 1, 1]
from sklearn.neighbors import KNeighborsClassifier
neigh = KNeighborsClassifier(n_neighbors=3)
neigh.fit(X, y) 

print(neigh.predict([[1.1]]))

print(neigh.predict_proba([[0.9]]))
82/4:
X = [[0], [1], [2], [3]]
y = [0, 0, 1, 1]
from sklearn.neighbors import KNeighborsClassifier
neigh = KNeighborsClassifier(n_neighbors=3)
neigh.fit neigh.fit(X, y)(X, y) 

print(neigh.predict([[1.1]]))

print(neigh.predict_proba([[0.9]]))
82/5:  neigh.fit(X, y)
83/1: import pandas as pd
83/2: pd.array
83/3: data = [0 3 0 'Red']
83/4: data = [0, 3, 0, 'Red']
83/5: DataFrame()
83/6: DataFrame(data)
83/7: DataFrame.head
83/8: df = DataFrame(data)
83/9: df
83/10: df.columns
83/11: df.columns('l','l')
83/12: df.head
83/13: df.count
83/14: e9)
83/15: e()
85/1: import pandas as pd
85/2: pd.read_csv("Pp67_ISLR_KNNbasic_raw_data.csv")
85/3: !dir
85/4: pd.read_csv("D:\Eclipse_Workspace\ISLR\Pp67_ISLR_KNNbasic_raw_data.csv")
85/5: from sklear
85/6: from sklearn import neighbors
85/7: clf = neighbors.KNeighborsClassifier()
85/8: data = pd.read_csv("D:\Eclipse_Workspace\ISLR\Pp67_ISLR_KNNbasic_raw_data.csv")
85/9: data
85/10: clf.fit(data)
85/11: clf.fit(data,[0,0,0])
85/12: data.replace([-999, -1000], 1)
85/13: data.replace('Red', 1)
85/14: data.replace({'Red': 1})
85/15: type(data)
85/16: data.replace({'Y':{'Red': 1}})
85/17: data
85/18: data.replace({'X3':{'1': 'Red'}})
85/19: data.replace({'X3':{1: 'Red'}})
85/20: data('X3')
85/21: data.'X3'
85/22: data.X3
85/23: data[X3]
85/24: data['X3']
85/25: data.dtypes
85/26: data.groupby('X1')
85/27: d=data.groupby('X1')
85/28: d
85/29: list(d)
85/30: d=data.select('X1')
85/31: d=data.select
85/32: d
85/33: d=data.select.
85/34: d=data.select.1
85/35: d=data.select['X1']
85/36: d=data['X1']
85/37: d
85/38: d=data['X2']
85/39: d=data['X1']
85/40: d=data['X2']
85/41: d=data[' X2']
85/42: d
85/43: data = pd.read_csv("D:\Eclipse_Workspace\ISLR\Pp67_ISLR_KNNbasic_raw_data.csv")
85/44: data
85/45: d=data[' X2']
85/46: d=data['X2']
85/47: d
85/48: data.groupby('X1')
85/49: data.replace({'X3':{'1': 'Red'}})
85/50: data.replace({'X3':{'Red': 1}})
85/51: data.replace('Red': 1)
85/52: data.replace('Red', 1)
85/53: data.replace('Green', 2)
85/54: data.replace({'Red': 1, 'Green':2})
85/55: in=data.replace({'Red': 1, 'Green':2})
85/56: inp=data.replace({'Red': 1, 'Green':2})
85/57: imp
85/58: inp
85/59: clf.fit(data,[0,0,0])
85/60: clf.fit(inp,[0,0,0])
85/61: clf.fit(inp,[0,0,0],inp\)
85/62: clf.fit(inp,[0,0,0],inp)
85/63: clf.fit(inp,[0,0,0,1])
85/64: clf.fit(inp,[0,0,0,1,2])
85/65: clf.fit(inp,[0,0,0,1,2,5])
85/66: inp
85/67: opop=clf.fit(inp,[0,0,0,1,2,5])
85/68: opo
85/69: opop
85/70: inp
85/71: opop=clf.fit([0,0,0],inp)
85/72:                                                                                         in
85/73: inp
85/74: inp_as_matrix
85/75: inp.as_matrix
85/76: i=inp.as_matrix
85/77: opop=clf.fit(i,[0,0,0])
85/78: opop=clf.fit(i,[0,0,0])
85/79: i
85/80: opop=clf.fit(i,[0,0,0,0])
85/81: opop=clf.fit(i[0],[0,0,0,0])
85/82: opop=clf.fit(i[0],[0,0,0,0])ype(i)
85/83: type(i)
85/84: i=inp.as_matrix()
85/85: i
85/86: opop=clf.fit(i[0],[0,0,0,0])
85/87: opop=clf.fit(i[0],[0,0,0])
85/88: opop=clf.fit(i,[0,0,0])
85/89: opop=clf.fit(i,[0,0,0,0])
85/90: opop=clf.fit(i)
85/91: opop=clf.fit(i,[0,0,0,0])
85/92: opop=clf.fit(i,[0,0,0,0,0,0])
85/93: opo
85/94: opopo
85/95: opop
85/96: print(neigh.kneighbors([[1., 1., 1.]]))
85/97: print(clf.kneighbors([[1., 1., 1.]]))
85/98: print(clf.kneighbors([[1., 1., 1.,1]]))
85/99: print(clf.kneighbors([[1., 1., 1.,1]]))
85/100: print(clf.kneighbors([[1., 1., 1.,1]]))
85/101: print(clf.kneighbors([[0., 0., 0.,0]]))
85/102: clf
85/103: i
85/104: clf.fit
85/105: estimator.estimated_param_
85/106: clf.estimated_param_
85/107: help(clf.fit)
85/108: e()
86/1: samples = [[0., 0., 0.], [0., .5, 0.], [1., 1., .5]]
86/2: from sklearn.neighbors import NearestNeighbors
86/3: neigh = NearestNeighbors(n_neighbors=1)
86/4: print(neigh.kneighbors([[1., 1., 5.]]))
86/5: neigh.fit(samples)
86/6: print(neigh.kneighbors([[0., 0., 0.]]))
86/7: neigh.fit([55555,5555])
86/8: neigh.fit([55555,5555],[99999,1111111])
86/9: neigh.fit([[55555,5555],[99999,1111111]])
86/10: print(neigh.kneighbors([[0., 0., 0.]]))
86/11: neigh.fit([[55555,5555],[99999,1111111],[99999,1111111]])
86/12: print(neigh.kneighbors([[0., 0., 0.]]))
86/13: neigh.fit([[55555,5555,0],[99999,1111111,767676],[99999,1111111,98989899]])
86/14: print(neigh.kneighbors([[0., 0., 0.]]))
86/15: print(neigh.predict([[0., 0., 0.]]))
86/16: print(neigh.predict([[0., 0., 0.]]))
86/17: e()
87/1: neigh.fit([[55555,5555,0],[99999,1111111,767676],[99999,1111111,98989899]])
87/2: e()
   1: %history -g -f filename
   2: %history -g -f filename.txt
